{"version":3,"sources":["src/template-map.js"," [synthetic:util/global] ","src/css-parse.js","src/apply-shim-utils.js","src/style-settings.js","src/common-regex.js","src/style-util.js","src/document-wait.js","src/custom-style-interface.js","src/style-transformer.js","src/document-watcher.js","src/style-info.js","src/style-properties.js","src/style-placeholder.js","src/scoping-shim.js","src/style-cache.js","src/common-utils.js","entrypoints/scoping-shim.js"],"names":["$jscomp.global","templateMap","constructor","StyleNode","parse","text","replace","RX$$module$src$css_parse.comments","RX$$module$src$css_parse.port","parseCss","root","length","n","i","l","OPEN_BRACE","p","previous","push","CLOSE_BRACE","node","t","substring","trim","ss","_expandUnicodeEscapes","RX$$module$src$css_parse.multipleSpaces","lastIndexOf","s","indexOf","AT_START","MEDIA_START","types$$module$src$css_parse.MEDIA_RULE","match","RX$$module$src$css_parse.keyframesRule","types$$module$src$css_parse.KEYFRAMES_RULE","split","pop","VAR_START","types$$module$src$css_parse.MIXIN_RULE","types$$module$src$css_parse.STYLE_RULE","r$","r","code","repeat","stringify","preserveProperties","cssText","rules","RX$$module$src$css_parse.customProp","RX$$module$src$css_parse.mixinProp","RX$$module$src$css_parse.mixinApply","RX$$module$src$css_parse.varApply","STYLE_RULE","KEYFRAMES_RULE","MEDIA_RULE","MIXIN_RULE","comments","port","customProp","mixinProp","mixinApply","varApply","keyframesRule","multipleSpaces","promise","Promise","resolve","invalidate","elementName","template","templateIsValid","startValidatingTemplate","_validating","then","nativeShadow","window","nativeCssVariables","calcCssVariables","settings","navigator","userAgent","CSS","supports","ShadyCSS","undefined","nativeCss","module$src$style_settings.nativeCssVariables","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","toCssText","callback","forEachRule","rulesForStyle","style","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","type","matchMedia","matches","applyCss","moniker","target","contextNode","document","createElement","setAttribute","applyStyle","lastHeadApplyNode","head","insertBefore","nextSibling","firstChild","compareDocumentPosition","position","Node","DOCUMENT_POSITION_PRECEDING","processVariableAndFallback","str","start","level","inner","end","prefix","suffix","comma","value","fallback","setElementClassRaw","element","call","getIsExtends","localName","typeExtension","is","getAttribute","extends","whenReady","readyPromise","requestAnimationFrame","readyState","addEventListener","documentWait","transformFn","validateFn","NODELIST_FOREACH","NodeList","prototype","forEach","CustomStyleInterface","observer","enqueueDocumentValidation","addCustomStyle","getStyleForCustomStyle","customStyle","processStyles","_mutationHandler","takeRecords","cs","styleToTransform","gatherMainDocumentStyles","styles","querySelectorAll","UNSCOPED_SELECTOR","watchMainDocumentStyles","MutationObserver","mxns","observe","childList","subtree","mxn","j","addedNodes","nodeType","ELEMENT_NODE","hasAttribute","nodeList","context","Array","from","Object","defineProperties","get","set","fn","needsEnqueue","StyleTransformer","dom","scope","shouldRemoveScope","$jscompDefaultExport","_transformDom","selector","c$","childNodes","content","_content","children","classList","remove","SCOPE_NAME","add","c","CLASS","newValue","elementStyles","styleRules","cssBuildType","css","ext","hostScope","_calcHostScope","CSS_CLASS_PREFIX","isScoped","transformedSelector","_transformRuleCss","self","_transformComplexSelector","transformer","p$","COMPLEX_SELECTOR_SEP","join","_twiddleNthPlus","NTH","m","inside","stop","isNth","test","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","typeSelector","SELECTOR_NO_MATCH","normalizeRootSelector","ROOT","_transformDocumentSelector","SCOPE_DOC_SELECTOR","$jscomp.global.Object.defineProperties","RegExp","flush","handler","x","documentElement","getRootNode","classes","idx","ownerDocument","currentScope","DOCUMENT_FRAGMENT_NODE","newScope","unscoped","delayedStart","body","listener","removeEventListener","module$src$document_watcher.flush","StyleInfo","ast","placeholder","ownStylePropertyNames","overrideStyleProperties","scopeSelector","styleProperties","styleInfo","_getStyleRules","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","props","keyframes","ruleIndex","decorateRule","index","propertyInfo","exec","name","onKeyframesRule","_keyframes","names","properties","collectProperties","hasProperties","assign","any","valueForProperty","property","valueForProperties","propertyValue","parts","lastIndex","colon","pp","slice","propertyDataFromStyles","o","selectorToMatch","parseInt","key","whenHostOrRootRule","cssBuild","parsedSelector","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","hostRx","HOST_PREFIX","rxHostSelector","HOST_SUFFIX","StyleInfo$$module$src$style_info.get","keyframeTransforms","_elementKeyframeTransforms","output","input","hasAnimations","keyframeNamesToTransform","keyframe","transform","keyframesRules","keyframesNameRx","transformedKeyframesName","scopeId","_keyframesRuleTransformer","applyCustomStyle","XSCOPE_NAME","placeholderMap","ce","origDefine","wrappedDefine","clazz","options","placeHolder","createComment","after","styleCache","cache","typeMax","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","StyleInfo$$module$src$style_info.set","_elementsHaveApplied","_customStyleInterface","_applyShim","_ensure","ScopingShim$$module$src$scoping_shim.prototype","?.prototype","ScopingShim$$module$src$scoping_shim_prototype$flush","getStyleAst","styleAstToString","prepareTemplate","_prepared","querySelector","parentNode","removeChild","__cssBuild","has","_cssBuild","ownPropertyNames","shadowroot","_style","_ownPropertyNames","_ensureCustomStyleInterface","transformCustomStyleForDocument","flushCustomStyles","_ensureApplyShim","ApplyShim","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","styleDocument","styleElement","overrideProps","_isRootOwner","removeProperty","setProperty","shadowRoot","list","entry","pn","cachedStyle","cacheEntry","oldScopeSelector","cachedScopeSelector","id","v","shift","_styleOwnerForNode","owner","ownerStyleInfo","create","hostAndRootProps","propertiesMatchingHost","propertyData","overrides","getOwnPropertyNames","styleSubtree","shadowChildren","_transformRule","getComputedStyleValue","getComputedStyle","getPropertyValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode","scopingShim","ApplyShimImpl","elementExtends"],"mappings":"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","file":"scoping-shim.min.js","sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nexport const templateMap = {};",null,"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n/** @unrestricted */\nexport class StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {templateMap} from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport let nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nexport let nativeCssVariables;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * @param {Element} element\n * @return {?string}\n */\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/** @type {?function(?function())} */\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @const {Promise<void>} */\nconst readyPromise = new Promise((resolve) => {\n  requestAnimationFrame(() => {\n    if (whenReady) {\n      whenReady(resolve)\n    } else if (document.readyState === 'complete') {\n      resolve();\n    } else {\n      document.addEventListener('readystatechange', () => {\n        if (document.readyState === 'complete') {\n          resolve();\n        }\n      });\n    }\n  });\n});\n\n/**\n * @param {?function()} callback\n */\nexport function documentWait(callback) {\n  readyPromise.then(function(){ callback && callback(); });\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {documentWait} from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\nconst UNSCOPED_SELECTOR = 'style:not([scope])';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\nconst NODELIST_FOREACH = Boolean(NodeList.prototype.forEach);\n\n/**\n * @param {!NodeList} nodeList\n * @param {function(!HTMLStyleElement)} callback\n * @param {!CustomStyleInterface} context\n */\nfunction forEach(nodeList, callback, context) {\n  if (NODELIST_FOREACH) {\n    nodeList.forEach(callback, context);\n  } else {\n    Array.from(nodeList).forEach(callback, context);\n  }\n}\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n    /** @type {MutationObserver} */\n    this.observer = null;\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    if (this.observer) {\n      this._mutationHandler(this.observer.takeRecords());\n    }\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */(style['__appliedElement'] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n  gatherMainDocumentStyles() {\n    const styles = document.querySelectorAll(UNSCOPED_SELECTOR);\n    for (let i = 0; i < styles.length; i++) {\n      const s = /** @type {!HTMLStyleElement} */(styles[i]);\n      this.addCustomStyle(s);\n    }\n  }\n  watchMainDocumentStyles() {\n    if (this.observer) {\n      return;\n    }\n    this.gatherMainDocumentStyles();\n    this.observer = new MutationObserver((mxns) => this._mutationHandler(mxns));\n    this.observer.observe(document, {childList: true, subtree: true});\n  }\n  /**\n  * @param {Array<MutationRecord>} mxns\n  */\n  _mutationHandler(mxns) {\n    for (let i = 0; i < mxns.length; i++) {\n      let mxn = mxns[i];\n      for (let j = 0; j < mxn.addedNodes.length; j++) {\n        let n = mxn.addedNodes[j];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          if (n.localName === 'style' && !n.hasAttribute('scope')) {\n            this.addCustomStyle(/** @type {!HTMLStyleElement} */(n));\n          } else {\n            forEach(n.querySelectorAll(UNSCOPED_SELECTOR), this.addCustomStyle, this);\n          }\n        }\n      }\n    }\n  }\n}\n\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\nCustomStyleInterface.prototype['watchMainDocumentStyles'] = CustomStyleInterface.prototype.watchMainDocumentStyles;\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  }\n});","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element['__cssBuild'];\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = '';\n    if (nativeShadow || cssBuildType === 'shady') {\n      cssText = StyleUtil.toCssText(styleRules, callback);\n    } else {\n      let {is, typeExtension} = StyleUtil.getIsExtends(element);\n      cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule['selector'].split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {string}\n   */\n  _twiddleNthPlus(selector) {\n    return selector.replace(NTH, (m, type, inside) => {\n      if (inside.indexOf('+') > -1) {\n        inside = inside.replace(/\\+/g, '___');\n      } else if (inside.indexOf('___') > -1) {\n        inside = inside.replace(/___/g, '+');\n      }\n      return `:${type}(${inside})`;\n    });\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    let isNth = NTH.test(selector);\n    if (isNth) {\n      selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`)\n      selector = this._twiddleNthPlus(selector);\n    }\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    if (isNth) {\n      selector = this._twiddleNthPlus(selector);\n    }\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport {getIsExtends} from './style-util.js';\n\nexport let flush = function() {};\n\n/**\n * @param {HTMLElement} element\n * @return {!Array<string>}\n */\nfunction getClasses(element) {\n  let classes = [];\n  if (element.classList) {\n    classes = Array.from(element.classList);\n  } else if (element instanceof window['SVGElement'] && element.hasAttribute('class')) {\n    classes = element.getAttribute('class').split(/\\s+/);\n  }\n  return classes;\n}\n\n/**\n * @param {HTMLElement} element\n * @return {string}\n */\nfunction getCurrentScope(element) {\n  let classes = getClasses(element);\n  let idx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n  if (idx > -1) {\n    return classes[idx + 1];\n  }\n  return '';\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      if (currentScope && root === n.ownerDocument) {\n        StyleTransformer.dom(n, currentScope, true);\n      } else if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        let newScope;\n        let host = /** @type {ShadowRoot} */(root).host;\n        // element may no longer be in a shadowroot\n        if (!host) {\n          continue;\n        }\n        newScope = getIsExtends(host).is;\n        if (currentScope === newScope) {\n          // make sure all the subtree elements are scoped correctly\n          let unscoped = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(\n            n, `:not(.${StyleTransformer.SCOPE_NAME})`);\n          for (let j = 0; j < unscoped.length; j++) {\n            StyleTransformer.element(unscoped[j], currentScope);\n          }\n          continue;\n        }\n        if (currentScope) {\n          StyleTransformer.dom(n, currentScope, true);\n        }\n        StyleTransformer.dom(n, newScope);\n      }\n    }\n  }\n}\n\nif (!nativeShadow) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport * as RX from './common-regex.js';\nimport {StyleInfo} from './style-info.js';\n\n// TODO: dedupe with shady\n/**\n * @const {function(string):boolean}\n */\nconst matchesSelector = ((p) => p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\np.oMatchesSelector || p.webkitMatchesSelector)(window.Element.prototype);\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string|undefined} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules['__cssBuild'];\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule['keyframesName'], 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {applyStylePlaceHolder} from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/** @type {Object<string, !Node>} */\nexport let placeholderMap = {};\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   * @return {function(new:HTMLElement)}\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  }\n  ce['define'] = wrappedDefine;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {parse, StyleNode} from './css-parse.js';\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport StyleProperties from './style-properties.js';\nimport {placeholderMap} from './style-placeholder.js';\nimport {StyleInfo} from './style-info.js';\nimport {StyleCache} from './style-cache.js';\nimport {flush as watcherFlush} from './document-watcher.js';\nimport {templateMap} from './template-map.js';\nimport * as ApplyShimUtils from './apply-shim-utils.js';\nimport {documentWait} from './document-wait.js';\nimport {updateNativeProperties, detectMixin} from './common-utils.js';\nimport {CustomStyleInterface} from './custom-style-interface.js'; // eslint-disable-line no-unused-vars\n\nconst styleCache = new StyleCache();\n\nexport class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    this._applyShim = null;\n    /** @type {CustomStyleInterface} */\n    this._customStyleInterface = null;\n    documentWait(() => {\n      this._ensure();\n    });\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    let hasMixins = detectMixin(cssText)\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables && this._applyShim) {\n      this._applyShim['transformRules'](ast, elementName);\n    }\n    template['_styleAst'] = ast;\n    template._cssBuild = cssBuild;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst'], info);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let {is, typeExtension} = StyleUtil.getIsExtends(host);\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template['_styleAst'];\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS.ApplyShim) {\n      this._applyShim = window.ShadyCSS.ApplyShim;\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    }\n    this._customStyleInterface = window.ShadyCSS.CustomStyleInterface;\n    /** @type {function(!HTMLStyleElement)} */\n    this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n    this._customStyleInterface['validateCallback'] = () => {\n      requestAnimationFrame(() => {\n        if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n          this.flushCustomStyles();\n        }\n      })\n    };\n    this._customStyleInterface['watchMainDocumentStyles']();\n  }\n  _ensure() {\n    this._ensureCustomStyleInterface();\n    this._ensureApplyShim();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n    } else {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n    // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n    if (this._elementsHaveApplied && !nativeCssVariables) {\n      this.styleDocument();\n    }\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    let {is} = StyleUtil.getIsExtends(host);\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (!nativeCssVariables) {\n     this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    } else {\n      if (styleInfo.overrideStyleProperties) {\n        updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n        // update template\n        if (!ApplyShimUtils.templateIsValidating(template)) {\n          this._ensure();\n          this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          ApplyShimUtils.startValidatingTemplate(template);\n        }\n        // update instance if native shadowdom\n        if (nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template['_styleAst'];\n      }\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    let root = host.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren = root && (root.children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = host.children || host.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\n/* exports */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {CustomStyleInterface} from '../src/custom-style-interface.js';\nimport {ScopingShim} from '../src/scoping-shim.js';\nimport {nativeCssVariables, nativeShadow} from '../src/style-settings.js';\n\n/** @const {!ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShimImpl;\n\nif (window['ShadyCSS']) {\n  ApplyShimImpl = window['ShadyCSS']['ApplyShim'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow,\n\n  CustomStyleInterface: new CustomStyleInterface()\n};\n\nif (ApplyShimImpl) {\n  window.ShadyCSS.ApplyShim = ApplyShimImpl;\n}"]}