{"version":3,"sources":["src/template-map.js"," [synthetic:util/global] ","src/css-parse.js","src/apply-shim-utils.js","src/style-settings.js","src/common-regex.js","src/style-util.js","src/document-wait.js","src/custom-style-interface.js","src/style-transformer.js","src/document-watcher.js","src/style-info.js","src/style-properties.js","src/style-placeholder.js","src/scoping-shim.js","src/style-cache.js","src/common-utils.js","entrypoints/scoping-shim.js"],"names":["$jscomp.global","templateMap","constructor","StyleNode","parse","text","replace","RX$$module$src$css_parse.comments","RX$$module$src$css_parse.port","parseCss","root","length","n","i","l","OPEN_BRACE","p","previous","push","CLOSE_BRACE","node","t","substring","trim","ss","_expandUnicodeEscapes","RX$$module$src$css_parse.multipleSpaces","lastIndexOf","s","indexOf","AT_START","MEDIA_START","types$$module$src$css_parse.MEDIA_RULE","match","RX$$module$src$css_parse.keyframesRule","types$$module$src$css_parse.KEYFRAMES_RULE","split","pop","VAR_START","types$$module$src$css_parse.MIXIN_RULE","types$$module$src$css_parse.STYLE_RULE","r$","r","code","repeat","stringify","preserveProperties","cssText","rules","RX$$module$src$css_parse.customProp","RX$$module$src$css_parse.mixinProp","RX$$module$src$css_parse.mixinApply","RX$$module$src$css_parse.varApply","STYLE_RULE","KEYFRAMES_RULE","MEDIA_RULE","MIXIN_RULE","comments","port","customProp","mixinProp","mixinApply","varApply","keyframesRule","multipleSpaces","promise","Promise","resolve","invalidate","elementName","template","templateIsValid","startValidatingTemplate","_validating","then","nativeShadow","window","nativeCssVariables","calcCssVariables","settings","navigator","userAgent","CSS","supports","ShadyCSS","undefined","nativeCss","module$src$style_settings.nativeCssVariables","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","toCssText","callback","forEachRule","rulesForStyle","style","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","type","matchMedia","matches","applyCss","moniker","target","contextNode","document","createElement","setAttribute","applyStyle","lastHeadApplyNode","head","insertBefore","nextSibling","firstChild","compareDocumentPosition","position","Node","DOCUMENT_POSITION_PRECEDING","processVariableAndFallback","str","start","level","inner","end","prefix","suffix","comma","value","fallback","setElementClassRaw","element","call","getIsExtends","localName","typeExtension","is","getAttribute","extends","whenReady","readyPromise","requestAnimationFrame","readyState","addEventListener","documentWait","transformFn","validateFn","CustomStyleInterface","observer","enqueueDocumentValidation","addCustomStyle","getStyleForCustomStyle","customStyle","processStyles","cs","styleToTransform","gatherMainDocumentStyles","styles","querySelectorAll","watchMainDocumentStyles","MutationObserver","mutationHandler","mxns","mxn","j","addedNodes","nodeType","ELEMENT_NODE","el","hasAttribute","observe","childList","subtree","prototype","Object","defineProperties","get","set","fn","needsEnqueue","StyleTransformer","dom","scope","shouldRemoveScope","$jscompDefaultExport","_transformDom","selector","c$","childNodes","content","_content","children","classList","remove","SCOPE_NAME","add","c","CLASS","newValue","elementStyles","styleRules","cssBuildType","css","ext","hostScope","_calcHostScope","CSS_CLASS_PREFIX","isScoped","transformedSelector","_transformRuleCss","self","_transformComplexSelector","transformer","p$","COMPLEX_SELECTOR_SEP","join","_twiddleNthPlus","NTH","m","inside","stop","isNth","test","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","typeSelector","SELECTOR_NO_MATCH","normalizeRootSelector","ROOT","_transformDocumentSelector","SCOPE_DOC_SELECTOR","$jscomp.global.Object.defineProperties","RegExp","flush","handler","x","documentElement","getRootNode","classes","Array","from","idx","ownerDocument","currentScope","DOCUMENT_FRAGMENT_NODE","newScope","unscoped","delayedStart","body","listener","removeEventListener","takeRecords","module$src$document_watcher.flush","StyleInfo","ast","placeholder","ownStylePropertyNames","overrideStyleProperties","scopeSelector","styleProperties","styleInfo","_getStyleRules","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","props","keyframes","ruleIndex","decorateRule","index","propertyInfo","exec","name","onKeyframesRule","_keyframes","names","properties","collectProperties","hasProperties","assign","any","valueForProperty","property","valueForProperties","propertyValue","parts","lastIndex","colon","pp","slice","propertyDataFromStyles","o","selectorToMatch","parseInt","key","whenHostOrRootRule","cssBuild","parsedSelector","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","hostRx","HOST_PREFIX","rxHostSelector","HOST_SUFFIX","StyleInfo$$module$src$style_info.get","keyframeTransforms","_elementKeyframeTransforms","output","input","hasAnimations","keyframeNamesToTransform","keyframe","transform","keyframesRules","keyframesNameRx","transformedKeyframesName","scopeId","_keyframesRuleTransformer","applyCustomStyle","XSCOPE_NAME","placeholderMap","ce","origDefine","wrappedDefine","clazz","options","placeHolder","createComment","after","styleCache","cache","typeMax","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","StyleInfo$$module$src$style_info.set","_elementsHaveApplied","_customStyleInterface","_applyShim","_ensure","ScopingShim$$module$src$scoping_shim.prototype","?.prototype","ScopingShim$$module$src$scoping_shim_prototype$flush","getStyleAst","styleAstToString","prepareTemplate","_prepared","querySelector","parentNode","removeChild","__cssBuild","has","_cssBuild","ownPropertyNames","shadowroot","_style","_ownPropertyNames","_ensureCustomStyleInterface","transformCustomStyleForDocument","flushCustomStyles","_ensureApplyShim","ApplyShim","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","styleDocument","styleElement","overrideProps","_isRootOwner","removeProperty","setProperty","shadowRoot","list","entry","pn","cachedStyle","cacheEntry","oldScopeSelector","cachedScopeSelector","id","v","shift","_styleOwnerForNode","owner","ownerStyleInfo","create","hostAndRootProps","propertiesMatchingHost","propertyData","overrides","getOwnPropertyNames","styleSubtree","shadowChildren","_transformRule","getComputedStyleValue","getComputedStyle","getPropertyValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode","scopingShim","elementExtends"],"mappings":"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","file":"scoping-shim.min.js","sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n",null,"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nexport let nativeCssVariables;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * @param {Element} element\n * @return {?string}\n */\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {?function(?function())} */\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @const {Promise<void>} */\nconst readyPromise = new Promise((resolve) => {\n  requestAnimationFrame(() => {\n    if (whenReady) {\n      whenReady(resolve)\n    } else if (document.readyState === 'complete') {\n      resolve();\n    } else {\n      document.addEventListener('readystatechange', () => {\n        if (document.readyState === 'complete') {\n          resolve();\n        }\n      });\n    }\n  });\n});\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  readyPromise.then(function(){ callback && callback(); });\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n    /** @type {MutationObserver} */\n    this.observer = null;\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */(style['__appliedElement'] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   * @return {boolean}\n   */\n  isDocumentStyle(style) {\n    return !style.hasAttribute('scope');\n  }\n  gatherMainDocumentStyles() {\n    const styles = document.querySelectorAll('style:not([scope])');\n    for (let i = 0; i < styles.length; i++) {\n      const s = /** @type {!HTMLStyleElement} */(styles[i]);\n      this.addCustomStyle(s);\n    }\n  }\n  watchMainDocumentStyles() {\n    if (this.observer) {\n      return;\n    }\n    this.gatherMainDocumentStyles();\n    /**\n     * @param {Array<MutationRecord>} mxns\n     */\n    let mutationHandler = (mxns) => {\n      for (let i = 0; i < mxns.length; i++) {\n        let mxn = mxns[i];\n        for (let j = 0; j < mxn.addedNodes.length; j++) {\n          let n = mxn.addedNodes[j];\n          if (n.nodeType === Node.ELEMENT_NODE && n.localName === 'style') {\n            const el = /** @type {!HTMLStyleElement} */(n);\n            if (this.isDocumentStyle(el)) {\n              this.addCustomStyle(el);\n            }\n          }\n        }\n      }\n    };\n    this.observer = new MutationObserver(mutationHandler);\n    this.observer.observe(document, {childList: true, subtree: true});\n  }\n}\n\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\nCustomStyleInterface.prototype['watchMainDocumentStyles'] = CustomStyleInterface.prototype.watchMainDocumentStyles;\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  }\n});","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element['__cssBuild'];\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = '';\n    if (nativeShadow || cssBuildType === 'shady') {\n      cssText = StyleUtil.toCssText(styleRules, callback);\n    } else {\n      let {is, typeExtension} = StyleUtil.getIsExtends(element);\n      cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule['selector'].split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {string}\n   */\n  _twiddleNthPlus(selector) {\n    return selector.replace(NTH, (m, type, inside) => {\n      if (inside.indexOf('+') > -1) {\n        inside = inside.replace(/\\+/g, '___');\n      } else if (inside.indexOf('___') > -1) {\n        inside = inside.replace(/___/g, '+');\n      }\n      return `:${type}(${inside})`;\n    });\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    let isNth = NTH.test(selector);\n    if (isNth) {\n      selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`)\n      selector = this._twiddleNthPlus(selector);\n    }\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    if (isNth) {\n      selector = this._twiddleNthPlus(selector);\n    }\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport {getIsExtends} from './style-util.js';\n\nexport let flush = function() {};\n\n/**\n * @param {HTMLElement} element\n * @return {!Array<string>}\n */\nfunction getClasses(element) {\n  let classes = [];\n  if (element.classList) {\n    classes = Array.from(element.classList);\n  } else if (element instanceof window['SVGElement'] && element.hasAttribute('class')) {\n    classes = element.getAttribute('class').split(/\\s+/);\n  }\n  return classes;\n}\n\n/**\n * @param {HTMLElement} element\n * @return {string}\n */\nfunction getCurrentScope(element) {\n  let classes = getClasses(element);\n  let idx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n  if (idx > -1) {\n    return classes[idx + 1];\n  }\n  return '';\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      if (currentScope && root === n.ownerDocument) {\n        StyleTransformer.dom(n, currentScope, true);\n      } else if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        let newScope;\n        let host = /** @type {ShadowRoot} */(root).host;\n        // element may no longer be in a shadowroot\n        if (!host) {\n          continue;\n        }\n        newScope = getIsExtends(host).is;\n        if (currentScope === newScope) {\n          // make sure all the subtree elements are scoped correctly\n          let unscoped = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(\n            n, `:not(.${StyleTransformer.SCOPE_NAME})`);\n          for (let j = 0; j < unscoped.length; j++) {\n            StyleTransformer.element(unscoped[j], currentScope);\n          }\n          continue;\n        }\n        if (currentScope) {\n          StyleTransformer.dom(n, currentScope, true);\n        }\n        StyleTransformer.dom(n, newScope);\n      }\n    }\n  }\n}\n\nif (!nativeShadow) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport * as RX from './common-regex.js';\nimport StyleInfo from './style-info.js';\n\n// TODO: dedupe with shady\n/**\n * @const {function(string):boolean}\n */\nconst matchesSelector = ((p) => p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\np.oMatchesSelector || p.webkitMatchesSelector)(window.Element.prototype);\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string|undefined} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules['__cssBuild'];\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule['keyframesName'], 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/** @type {Object<string, !Node>} */\nlet placeholderMap = {};\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   * @return {function(new:HTMLElement)}\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  }\n  ce['define'] = wrappedDefine;\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse.js';\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport StyleProperties from './style-properties.js';\nimport placeholderMap from './style-placeholder.js';\nimport StyleInfo from './style-info.js';\nimport StyleCache from './style-cache.js';\nimport {flush as watcherFlush} from './document-watcher.js';\nimport templateMap from './template-map.js';\nimport * as ApplyShimUtils from './apply-shim-utils.js';\nimport documentWait from './document-wait.js';\nimport {updateNativeProperties, detectMixin} from './common-utils.js';\nimport CustomStyleInterface from './custom-style-interface.js'; // eslint-disable-line no-unused-vars\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    this._applyShim = null;\n    /** @type {?CustomStyleInterface} */\n    this._customStyleInterface = null;\n    documentWait(() => {\n      this._ensure();\n    });\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    let hasMixins = detectMixin(cssText)\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables && this._applyShim) {\n      this._applyShim['transformRules'](ast, elementName);\n    }\n    template['_styleAst'] = ast;\n    template._cssBuild = cssBuild;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst'], info);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let {is, typeExtension} = StyleUtil.getIsExtends(host);\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template['_styleAst'];\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n      this._applyShim = window.ShadyCSS.ApplyShim;\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterface} */(window.ShadyCSS.CustomStyleInterface);\n    } else {\n      this._customStyleInterface = new CustomStyleInterface();\n      window.ShadyCSS.CustomStyleInterface = this._customStyleInterface;\n    }\n    /** @type {function(!HTMLStyleElement)} */\n    this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n    this._customStyleInterface['validateCallback'] = () => {\n      requestAnimationFrame(() => {\n        if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n          this.flushCustomStyles();\n        }\n      })\n    };\n    this._customStyleInterface['watchMainDocumentStyles']();\n  }\n  _ensure() {\n    this._ensureCustomStyleInterface();\n    this._ensureApplyShim();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n    } else {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n    // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n    if (this._elementsHaveApplied && !nativeCssVariables) {\n      this.styleDocument();\n    }\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    let {is} = StyleUtil.getIsExtends(host);\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (!nativeCssVariables) {\n     this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    } else {\n      if (styleInfo.overrideStyleProperties) {\n        updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n        // update template\n        if (!ApplyShimUtils.templateIsValidating(template)) {\n          this._ensure();\n          this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          ApplyShimUtils.startValidatingTemplate(template);\n        }\n        // update instance if native shadowdom\n        if (nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template['_styleAst'];\n      }\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    let root = host.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren = root && (root.children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = host.children || host.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\n/* exports */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim.js';\nimport {nativeCssVariables, nativeShadow} from '../src/style-settings.js';\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}"]}